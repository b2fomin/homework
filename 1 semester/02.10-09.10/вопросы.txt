I) На чем основано ООП?
	На представлении программы в виде совокупности объектов, каждфй из которых является
	экземпляром определенного класса, а классы образуют иерархию наследования.
II) Какие аспекты следует учитывать при проектировании классов?
	абстракция, инкапсуляция, наследование, полиморфизм.
III) Почему удобно разделять классы на интерфейс и реализацию?
	Интерфейс класса описывает сам класс, не опираясь на его реализацию. Код других прорамм, использующих ваш класс, будет
	зависеть только от того, что вы напишете в интерфейсе, что укрепляет принцип инкапсуляции.
	Также можно писать несколько классов с одним и тем же интерфейсом, но с разной реализацией.
IV) Чем внутреннее связывание отличается от внешнего?
	Если внутри единицы трансляции у символа есть внутреннее связывание, то этот символ
	виден компоновщику только внутри этой единицы трансляции. Если у объекта или функции внешнее
	связывание, то компоновщик сможет его видеть при обработке других единиц трасляции.
V) Какими особенностями обладают именованные пространства имен?
	Пространство имен может быть объявлено в нескольких частяях одного файла или нескольких файлов.
	Члены именованного пространства имен могут определяться и за его границами, если они объявлены 
	путем явной квалификации определяемого пространства имен. Если одно пространтсво имен вложено
	в другое, доступ к нему осуществляется через внешнее: Boo::Foo::x, где Foo вложено в Boo.
	
	