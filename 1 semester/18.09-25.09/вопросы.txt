1) О каких принципах следует помнить при разработке функций?
	I) Принципы передачи и возвращения по значению ссылке и адресу, встроенной и внешней функций.
	Функции не должны быть большими по объему, лучше делать несколько маленьких и простых.
	Названия функций должны быть короткими и указывать на суть того, что она делает.
	Код не должен быть хрупким, то есть не работающим уже при небольших модификациях
	Функция должна использовать только внутренние параметры и аргументы. Использование глобальных переменных не рекомендуется.
2) В чем заключается концепция встраивания вызовов функций?
	Встраивание функций - способ оптимизации, при котором вызов функции заменяется копией
	содержимого самой функции. Ускоряет работу только для небольших функций.
3) Какие аргументы функции могут иметь значения по умолчанию?
	Аргументы могут иметь значения по умолчанию, если они определяются после (справа от)
	аргументов, значения которых нужно обязательно вводить.
	Значения по умолчанию могут иметь только статические переменные, но не динамические.
4) На основании чего разрешается выбор перегруженной функции?
	Компилятор выбирает ту версию функции, тип аргументов которой совпадает с типами
	переданных в нее значений и типы возвращаемых значений такие же, как и у принимающих их
	переменных.
5) Как обеспечить состояние в функциях и лямбда-выражениях?
	Для задания состояния функции нужно задать все аргументы, передаваемые в скобках.
	Для задания состояния лямбда выражения нужно также задать переменные во внешнем коде,
	захватываемые лямбда-выражением.