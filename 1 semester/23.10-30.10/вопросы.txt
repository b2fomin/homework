I) Какие существуют способы обработки различных ошибок?
	1) Не обрабатывать. 2) Коды возврата 3) Использовать флаг ошибки: при возникновении оной
	устанавливать флаг в соответствующее значение 4) Вызывать метод обработки ошибки и возвращать
	то, что вернет этот метод 5) В случае ошибки просто закрыть программу. 6) с помощью исключений
II) В чем заключаются недостатки механизма кодов возврата?
	Необходимость проверки возвращаемого значения каждый раз при вызове метода или функции.
	Не всегда можно определить тип ошибки (только заранее прописанные).
	Функция не всегда возвращает тот же тип, что и код ошибки (int или const char*).
III) Какимим особенностями обладает механизм исключений?
	Позволяет разделить обработку ошибок и сам алгоритм; не загромождать код проверками
	возвращаемых значений; обрабатывать ошибки на более высоких уровнях, когда на текущем не
	хватает данных для обработки; классифицировать типы ошибок, обрабатывать похожие исключения
	одинаково, сопоставлять специфичным исключениям определенные обработчики.
IV) Для чего используется спецификатор и оператор noexcept?
	Указывает, может ли функция создавать исключения. В качестве аргументов принимает набор
	возможних типов, для которых невозможны в данном контексте исключения.
V) Как формулируются гарантии безопасности исключений?
	Базовая гарантия: в случае возникновения исключений не должно быть никаких утечек ресурсов.
	Строгая гарантия: если при выполнении операции возникает исключение, то это не должно оказать
	какого-либо влияния на состояние приложения.
	Гарантия отсутствия исключений: ни при каких обстоятельствах функция не будет генерировать исключения.