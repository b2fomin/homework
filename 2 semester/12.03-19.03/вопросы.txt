I) Почему класс std::string имеет много перегруженных функций-членов?
Так как необходимо работать с различными кодировками, в которых может различаться
размер символа.
II) Как осуществляется интернационализация и локализация программы?
Интернационализация: проектирование таким образом, чтобы не было преград при локализации и международном
применении (использование Unicode и др.); обеспечение основы для элементов,
использование до локализации которых невозможно; возможность кодовой поддрежки
местных предпочтений; возможность добавлять локализованные элементы независимо
от остальной программы.
Локализация: обеспечить поддержку языка (вывод на экран символов, корректное выравнивание и т.д.)
и национальных стандартов (перевод в национальную валюту, торговые знаки и т.д.)
III) Чем отличаются многобайтовые кодировки от широких?
В многобайтовых кодировках размер символа непостоянен (1 байт для английского
и 3 для китайского алфавитов). Широкая кодировка: все символы имеют пусть и
большой, но одинаковый размер (wchar_t занимает 2 байта).
IV) Какие компоненты входят в стандарт кодирования символов Unicode?
UTF-8, UTF-16, UTF-32.
V) Для решения каких задач удобно использовать регулярные выражения?
Для поиска и подстановки текста.